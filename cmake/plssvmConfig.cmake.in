## Authors: Alexander Van Craen, Marcel Breyer
## Copyright (C): 2018-today The PLSSVM project - All Rights Reserved
## License: This file is part of the PLSSVM project which is released under the MIT license.
##          See the LICENSE.md file in the project root for full license information.
########################################################################################################################

@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

# check if the OpenMP is required (for the OpenMP backend or library utilities)
set(PLSSVM_HAS_OPENMP_UTILITY @PLSSVM_FOUND_OPENMP_FOR_UTILITY@)
set(PLSSVM_HAS_OPENMP_BACKEND @PLSSVM_OPENMP_BACKEND_LIBRARY_NAME@)
if (PLSSVM_HAS_OPENMP_BACKEND OR PLSSVM_HAS_OPENMP_UTILITY)
    find_dependency(OpenMP REQUIRED)
endif ()

# check if fmt has been installed via FetchContent
set(PLSSVM_FOUND_FMT @fmt_FOUND@)
if (PLSSVM_FOUND_FMT)
    find_dependency(fmt REQUIRED)
endif ()

# check if the CUDA backend is required
set(PLSSVM_HAS_CUDA_BACKEND @PLSSVM_CUDA_BACKEND_LIBRARY_NAME@)
if (PLSSVM_HAS_CUDA_BACKEND)
    enable_language(CUDA)
endif ()

# check if the HIP backend is required
set(PLSSVM_HAS_HIP_BACKEND @PLSSVM_HIP_BACKEND_LIBRARY_NAME@)
if (PLSSVM_HAS_HIP_BACKEND)
    enable_language(HIP)
    find_package(HIP REQUIRED)
endif ()

# check if the OpenCL backend is required
set(PLSSVM_HAS_OPENCL_BACKEND @PLSSVM_OPENCL_BACKEND_LIBRARY_NAME@)
if (PLSSVM_HAS_OPENCL_BACKEND)
    find_dependency(OpenCL REQUIRED)
endif ()

# check if the SYCL implementation AdaptiveCpp backend is required
set(PLSSVM_HAS_SYCL_BACKEND_ADAPTIVECPP @PLSSVM_SYCL_BACKEND_ADAPTIVECPP_LIBRARY_NAME@)
if (PLSSVM_HAS_SYCL_BACKEND_ADAPTIVECPP)
    set(ACPP_TARGETS @ACPP_TARGETS@)
    find_dependency(AdaptiveCpp CONFIG REQUIRED)
    message(STATUS "Found AdaptiveCpp with ${ACPP_TARGETS}")
endif ()

include("${CMAKE_CURRENT_LIST_DIR}/plssvmTargets.cmake")
check_required_components("plssvm")